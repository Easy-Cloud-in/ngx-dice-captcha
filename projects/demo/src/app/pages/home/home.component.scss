// CSS Variables for responsive captcha sizing
// Note: With container queries in the library component, these are less critical
// but kept for backward compatibility and explicit control if needed
:host {
  --captcha-aspect-ratio-desktop: 24 / 12;
  --captcha-aspect-ratio-mobile: 4 / 3;
  --captcha-gap-desktop: 1rem;
  --captcha-gap-mobile: 0.75rem;
}

.header-actions {
  margin-top: 1.5rem;

  .test-link {
    display: inline-block;
    padding: 0.75rem 1.5rem;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
    text-decoration: none;
    border-radius: 8px;
    font-weight: 600;
    font-size: 0.95rem;
    transition: all 0.3s ease;
    box-shadow: 0 2px 8px rgba(102, 126, 234, 0.3);

    &:hover {
      transform: translateY(-2px);
      box-shadow: 0 4px 12px rgba(102, 126, 234, 0.4);
    }

    &:active {
      transform: translateY(0);
    }
  }
}

.home-container {
  min-height: 100%;
  min-width: 100%;

  display: flex;
  align-items: center;
  justify-content: center;
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  padding: 2rem;
}

.home-content {
  max-width: 1200px;
  width: 100%;
}

.home-header {
  text-align: center;
  color: white;
  margin-bottom: 3rem;

  h1 {
    font-size: 3rem;
    font-weight: 700;
    margin: 0 0 1rem;
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
  }

  .subtitle {
    font-size: 1.25rem;
    opacity: 0.95;
    margin: 0;
  }
}

.captcha-section {
  background: white;
  // outline: solid red 2px;
  border-radius: 16px;
  padding: 2rem;
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  // box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
}

.captcha-controls {
  display: flex;
  justify-content: flex-end;
  width: 100%;
  margin-bottom: 1.5rem;
}

.refresh-button {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.75rem 1.5rem;
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  color: white;
  border: none;
  border-radius: 8px;
  font-size: 1rem;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s ease;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);

  .refresh-icon {
    font-size: 1.2rem;
    display: inline-block;
    transition: transform 0.3s ease;
  }

  .refresh-text {
    display: inline-block;
  }

  &:hover:not(:disabled) {
    transform: translateY(-2px);
    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);

    .refresh-icon {
      transform: rotate(180deg);
    }
  }

  &:active:not(:disabled) {
    transform: translateY(0);
  }

  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;

    .refresh-icon {
      animation: spin 1s linear infinite;
    }
  }

  @keyframes spin {
    from {
      transform: rotate(0deg);
    }
    to {
      transform: rotate(360deg);
    }
  }
}

.info-card {
  background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
  border-radius: 12px;
  padding: 1.5rem;
  margin-bottom: 2rem;

  h2 {
    font-size: 1.5rem;
    margin: 0 0 1rem;
    color: #333;
  }

  ol {
    margin: 0 0 1rem;
    padding-left: 1.5rem;
    line-height: 1.8;
    color: #555;
  }

  .info-note {
    background: rgba(102, 126, 234, 0.1);
    border-left: 4px solid #667eea;
    padding: 1rem;
    margin: 1rem 0 0;
    border-radius: 4px;
    color: #333;
  }
}

.captcha-wrapper {
  width: 100%;
  height: auto;
  margin: 2rem 0;
  position: relative;

  & ngx-dice-captcha {
    width: 100%;
    display: block;
    position: relative;

    // Minimal overrides - let the component's container queries handle responsiveness
    ::ng-deep .ngx-dice-captcha-container {
      max-width: none !important;
      width: 100%;
      padding: 0 !important;
    }

    // Optional: Control gap between canvas and other elements
    ::ng-deep .captcha-content {
      gap: var(--captcha-gap-desktop);
    }

    // Let the library component handle canvas sizing via container queries
    // Remove forced aspect-ratio and min-height to prevent conflicts
  }
}

.dice-values-display {
  margin-top: 2rem;
  padding: 1.5rem;
  background: #f8f9fa;
  border-radius: 12px;
  border: 2px solid #e9ecef;

  h3 {
    font-size: 1.25rem;
    margin: 0 0 1rem;
    color: #333;
    text-align: center;
  }

  .dice-values-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
    gap: 1rem;
    margin-bottom: 1rem;
  }

  .dice-value-card {
    background: white;
    padding: 1rem;
    border-radius: 8px;
    text-align: center;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);

    .dice-label {
      display: block;
      font-size: 0.875rem;
      color: #666;
      margin-bottom: 0.5rem;
    }

    .dice-value {
      display: block;
      font-size: 2rem;
      font-weight: 700;
      color: #667eea;
    }
  }

  .sum-display {
    text-align: center;
    padding: 1rem;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    border-radius: 8px;
    margin-bottom: 1rem;

    .sum-label {
      font-size: 0.875rem;
      color: rgba(255, 255, 255, 0.9);
      margin-right: 0.5rem;
    }

    .sum-value {
      font-size: 2rem;
      font-weight: 700;
      color: white;
    }
  }

  .helper-text {
    text-align: center;
    color: #666;
    margin: 0;
    font-size: 0.875rem;
  }
}

@media (max-width: 768px) {
  .home-container {
    padding: 1rem;
  }

  .home-header {
    h1 {
      font-size: 2rem;
    }

    .subtitle {
      font-size: 1rem;
    }
  }

  .captcha-section {
    padding: 1rem;
  }

  .captcha-wrapper {
    margin: 1rem 0;

    ngx-dice-captcha {
      // Let container queries handle mobile sizing
      ::ng-deep .captcha-content {
        gap: var(--captcha-gap-mobile);
      }
    }
  }

  .dice-values-display .dice-values-grid {
    grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));
  }
}
